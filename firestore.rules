rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Reglas para comunidades
    match /communities/{communityId} {
      // Leer: Miembros de la comunidad O para verificar código de invitación
      allow read: if request.auth != null && 
                     (request.auth.uid in resource.data.members ||
                      // Permitir leer para verificar invite code (solo campos específicos)
                      true);
      
      // Crear: Usuario autenticado que se incluye como creador
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.createdBy &&
                       request.auth.uid in request.resource.data.members;
      
      // Actualizar: Creador O para unirse usando invite code
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.createdBy ||
                        // Permitir actualizar para unirse a la comunidad
                        (resource.data.isActive == true &&
                         request.resource.data.members.hasAll(resource.data.members) &&
                         request.auth.uid in request.resource.data.members &&
                         request.auth.uid not in resource.data.members));
    }
    
    // Reglas para conceptos de pago
    match /payment_concepts/{conceptId} {
      // Leer: Usuarios autenticados
      allow read: if request.auth != null;
      
      // Crear: Usuario autenticado
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.createdBy;
      
      // Actualizar: Solo el creador O para actualizar currentAmount
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.createdBy ||
                        // Permitir actualizar currentAmount cuando hay un pago
                        (request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['currentAmount', 'updatedAt'])));
      
      // Eliminar: Solo el creador
      allow delete: if request.auth != null && 
                       request.auth.uid == resource.data.createdBy;
    }
    
    // Reglas para contribuciones de usuarios
    match /user_contributions/{contributionId} {
      // Leer: Usuarios autenticados pueden ver todas las contribuciones
      allow read: if request.auth != null;
      
      // Crear: Solo el usuario puede crear sus propias contribuciones
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.userId;
      
      // Actualizar: Solo el usuario que hizo la contribución
      allow update: if request.auth != null && 
                       request.auth.uid == resource.data.userId;
    }
    
    // Reglas para pagos de usuarios
    match /user_payments/{paymentId} {
      // Leer: El usuario que hizo el pago puede leerlo
      allow read: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
      
      // Crear: Solo el usuario puede crear sus propios pagos
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.userId;
      
      // Actualizar: Solo el usuario que hizo el pago
      allow update: if request.auth != null && 
                       request.auth.uid == resource.data.userId;
    }
    
    // Reglas para perfiles de usuario (si los usas)
    match /user_profiles/{userId} {
      // Leer y escribir: Solo el propio usuario
      allow read, write: if request.auth != null && 
                            request.auth.uid == userId;
    }
    
    // Denegar todo lo demás por defecto
    match /{document=**} {
      allow read, write: if false;
    }
  }
}